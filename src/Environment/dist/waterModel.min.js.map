{"version":3,"sources":["waterModel.ts"],"names":["Water_1","require","three_1","WaterModel","sun","this","water","undefined","prototype","updateRender","material","uniforms","value","addToScene","scene","waterGeometry","PlaneGeometry","Water","textureWidth","textureHeight","waterNormals","TextureLoader","load","texture","wrapS","wrapT","RepeatWrapping","alpha","sunDirection","sunColor","waterColor","distortionScale","fog","rotation","x","Math","PI","add","waterUniforms","console","log","size","window","exports"],"mappings":"mCACA,IAAAA,QAAAC,QAAA,oCACAC,QAAAD,QAAA,SAEAE,WAAA,WAKI,SAAAA,EAAYC,GAHJC,KAAAC,WAA2BC,EAI/BF,KAAKD,IAAMA,EA4CnB,OAxCID,EAAAK,UAAAC,aAAA,gBACuBF,IAAfF,KAAKC,QAETD,KAAKC,MAAMI,SAASC,SAAe,KAAEC,OAAS,EAAM,KAIxDT,EAAAK,UAAAK,WAAA,SAAWC,GACP,IAAMC,EAAgB,IAAIb,QAAAc,cAAc,KAAM,MACxCV,EAAQ,IAAIN,QAAAiB,MACdF,EACA,CACIG,aAAc,IACdC,cAAe,IACfC,cAAc,IAAIlB,QAAAmB,eAAgBC,KAAK,yDAA0D,SAAUC,GACvGA,EAAQC,MAAQD,EAAQE,MAAQvB,QAAAwB,iBAEpCC,MAAO,GACPC,aAAavB,KAAKD,IAClByB,SAAU,SACVC,WAAY,KACZC,gBAAiB,IACjBC,SAAmBzB,IAAdO,EAAMkB,MAGnB1B,EAAM2B,SAASC,GAAKC,KAAKC,GAAK,EAC9BtB,EAAMuB,IAAI/B,GAIV,IAAMgC,EAAgBhC,EAAMI,SAASC,SACrC4B,QAAQC,IAAIF,GACbA,EAAcG,KAAK7B,MAAQ,IAC1BP,KAAKC,MAAQA,EAGboC,OAAOpC,MAAQA,GAIvBH,EAlDA,GAAawC,QAAAxC,WAAAA","file":"waterModel.min.js","sourcesContent":["import {Renderable} from \"./RendererSettings\";\r\nimport {Water} from \"three/examples/jsm/objects/Water\";\r\nimport {PlaneGeometry, RepeatWrapping, Scene, TextureLoader, Vector3} from \"three\";\r\n\r\nexport class WaterModel implements Renderable {\r\n\r\n    private water: Water | undefined = undefined;\r\n    private  sun;\r\n\r\n    constructor(sun : Vector3) {\r\n        this.sun = sun;\r\n    }\r\n\r\n\r\n    updateRender() {\r\n        if (this.water === undefined) return;\r\n        // @ts-ignore\r\n        this.water.material.uniforms['time'].value += 1.0 / 60.0;\r\n    }\r\n\r\n\r\n    addToScene(scene: Scene) {\r\n        const waterGeometry = new PlaneGeometry(1500, 1500);\r\n        const water = new Water(\r\n            waterGeometry,\r\n            {\r\n                textureWidth: 512,\r\n                textureHeight: 512,\r\n                waterNormals: new TextureLoader().load('https://threejs.org/examples/textures/waternormals.jpg', function (texture) {\r\n                    texture.wrapS = texture.wrapT = RepeatWrapping;\r\n                }),\r\n                alpha: .5,\r\n                sunDirection:this.sun,\r\n                sunColor: 0xffffff,\r\n                waterColor: 0x001e0f,\r\n                distortionScale: 3.7,\r\n                fog: scene.fog !== undefined\r\n            }\r\n        );\r\n        water.rotation.x = -Math.PI / 2;\r\n        scene.add(water);\r\n\r\n\r\n        //@ts-ignore\r\n        const waterUniforms = water.material.uniforms;\r\n        console.log(waterUniforms)\r\n       waterUniforms.size.value = 500;\r\n        this.water = water;\r\n\r\n        //@ts-ignore\r\n        window.water = water;\r\n    }\r\n\r\n\r\n}"]}